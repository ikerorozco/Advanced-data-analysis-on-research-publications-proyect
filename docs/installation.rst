=============================================
Instalaci√≥n y Configuraci√≥n
=============================================

Existen dos m√©todos para ejecutar la aplicaci√≥n:  

1Ô∏è‚É£ **Usando Docker Compose (Recomendado)** ‚Äì Corre Grobid y la aplicaci√≥n en contenedores autom√°ticamente.  
2Ô∏è‚É£ **Usando Python 3.10+ y un entorno virtual** ‚Äì Ejecuta la aplicaci√≥n sin Docker, pero usa **Grobid en un contenedor Docker**.

Ambos m√©todos permiten procesar los art√≠culos y generar las visualizaciones autom√°ticamente.

-------------------------------------------------------------

1Ô∏è‚É£ **M√©todo 1: Usando Docker Compose (Recomendado)**
-------------------------------------------------------------

Este m√©todo inicia **Grobid y la aplicaci√≥n** en contenedores separados, lo que facilita la ejecuci√≥n sin instalar dependencias manualmente.

**Paso 1: Clonar el repositorio**
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
.. code-block:: bash

   git clone https://github.com/SergonM/ArticlesAnalysisGrobid.git
   cd ArticlesAnalysisGrobid

**Paso 2: Agregar los art√≠culos en la carpeta `data/`**
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- En la carpeta `data/` hay **2 art√≠culos en PDF** por defecto.
- Puedes reemplazarlos o agregar nuevos documentos en esta carpeta.

**Paso 3: Iniciar los servicios con Docker Compose**
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Ejecuta el siguiente comando para levantar los servicios (en versiones de Docker antiguas es docker-compose):

.. code-block:: bash

   docker compose up -d

üîπ Esto iniciar√°:  
- **Grobid** en `http://localhost:8070`  
- **La aplicaci√≥n**, que interact√∫a con Grobid y procesa los art√≠culos  

üìå **Notas**:
- Si Grobid no responde, verifica que el servicio est√© activo en `http://localhost:8070/api/isalive`.
- Para detener los servicios:

.. code-block:: bash

   docker compose down

-------------------------------------------------------------

2Ô∏è‚É£ **M√©todo 2: Usando Python 3.10+ con Virtualenv y Docker para Grobid**
-------------------------------------------------------------------------

Este m√©todo usa **Python 3.10+** para ejecutar la aplicaci√≥n y un contenedor **Docker para Grobid**.

**Paso 1: Clonar el repositorio**
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
.. code-block:: bash

   git clone https://github.com/SergonM/ArticlesAnalysisGrobid.git
   cd ArticlesAnalysisGrobid

**Paso 2: Crear y activar un entorno virtual**
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Ejecuta los siguientes comandos para crear un entorno virtual en Python:

.. code-block:: bash

   python -m venv venv
   source venv/bin/activate  # En Linux/macOS
   venv\Scripts\activate     # En Windows

**Paso 3: Instalar las dependencias**
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
.. code-block:: bash

   pip install -r requirements.txt

**Paso 4: Agregar los art√≠culos en la carpeta `data/`**
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- En la carpeta `data/` hay **2 art√≠culos en PDF** por defecto.
- Puedes reemplazarlos o agregar nuevos documentos en esta carpeta.

**Paso 5: Iniciar Grobid con Docker**
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Ejecuta el siguiente comando para iniciar **Grobid** en un contenedor **Docker**:

.. code-block:: bash

   docker run -t --rm -p 8070:8070 -e JAVA_TOOL_OPTIONS=-XX:-UseContainerSupport lfoppiano/grobid:0.8.1

üîπ Esto iniciar√° **Grobid en `http://localhost:8070`**.
üîπ Deja esta terminal abierta mientras se ejecuta Grobid.

**Paso 6: Ejecutar la aplicaci√≥n manualmente**
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
En otra terminal, aseg√∫rate de que el entorno virtual sigue activado y ejecuta:

.. code-block:: bash

   python src/main.py

üìå **Notas**:
- Grobid debe estar corriendo antes de ejecutar la aplicaci√≥n.
- Si Grobid deja de responder, reinicia el contenedor con el **Paso 5**.

-------------------------------------------------------------

Ambos m√©todos permiten procesar los art√≠culos y generar las visualizaciones autom√°ticamente. üöÄ
